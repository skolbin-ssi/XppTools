<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DEVCustomScriptPackageTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class DEVCustomScriptPackageTable extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>create</Name>
				<Source><![CDATA[
    public static void create(Description _description, SharedServiceUnitFileID _fileId)
    {
        
        DEVCustomScriptPackageTable newPackage;

        using (DEVCustomScriptFile file = DEVCustomScriptFile::newFromFileId(_fileId))
        {
            //newScript.Status = AppConsistencyCustomScriptStatus::Uploaded;
            newPackage.Description = _description;
            newPackage.ServerFileId = _fileId;
            //newPackage.ClassName = file.parmClassName();
            newPackage.AssemblyName = file.parmAssemblyName();

            if (newPackage.checkForConflicts())
            {
                ttsbegin;
                newPackage.insert();

                DEVCustomScriptTable newScript;
                SetEnumerator e = file.parmClassNames().getEnumerator();

                while (e.moveNext())
                {
                    newScript.clear();
                    newScript.initValue();
                    newScript.Package = newPackage.RecId;
                    newScript.ClassName = e.current();
                    newScript.insert();
                }


                ttscommit;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkForConflicts</Name>
				<Source><![CDATA[
    public boolean checkForConflicts()
    {
        if (this.isConflictingWithExistingAssemblies())
        {
            return Box::okCancel(strFmt("A deployable package with the assembly signature '%1' already exists. The system will reuse the implementation from the existing package. Do you want to continue?", this.AssemblyName), DialogButton::Cancel) == DialogButton::Ok;
        }
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isConflictingWithExistingAssemblies</Name>
				<Source><![CDATA[
    public boolean isConflictingWithExistingAssemblies()
    {
        DEVCustomScriptPackageTable package;

        select firstonly crosscompany RecId from package
            where package.AssemblyName == this.AssemblyName;

        return package.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findRecId</Name>
				<Source><![CDATA[
    public static DEVCustomScriptPackageTable findRecId(RefRecId _recId,  boolean _forUpdate = false)
    {
        DEVCustomScriptPackageTable customScriptPackageTable;
        ;
        if (_recId)
        {
            customScriptPackageTable.selectForUpdate(_forUpdate);
            
            select  customScriptPackageTable
                where customScriptPackageTable.RecId == _recId;
        }
        
        return customScriptPackageTable;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<Label>Custom script deployable package</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TitleField1>Description</TitleField1>
	<TitleField2>AssemblyName</TitleField2>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>Overview</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AssemblyName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CreatedBy</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CreatedDateTime</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>DetailsHeaderGroup</Name>
			<Label>Details header</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AssemblyName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CreatedBy</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CreatedDateTime</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ServerFileId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>SharedServiceUnitFileID</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AssemblyName</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssemblyName</ExtendedDataType>
			<Label>@SYS89018</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<ExtendedDataType>Description</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>CreatedIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>CreatedDateTime</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>